
-- Cryptology --

• Basic Concepts of Cryptology
• Types of Cryptography
• Historical Ciphers
• Objectives of Cryptography
• Random Number Generators
• 



-- Basic Concepts of Cryptology --

What is Cryptology
The science that designs crypto algorithms that provide data security in communication infrastructures and research the reliability of these algorithms is called "Cryptology". “Cryptology” is a science that is based on encryption and decryption, which is usually the expertise of mathematicians. For the science of cryptology, it can be said that consist of the intersection of mathematics, electrical engineering, and computer science. Cryptology science is a very broad science and is divided into 2 itself: "Cryptography" and "Cryptanalysis". 

What is Plaintext
"Plaintext" is a readable and understandable text or piece of text. In cryptology, plaintext means unencrypted data. 

What is Ciphertext
"Ciphertext" is the value produced as a result of the algorithm after the plaintext is given as an input to a crypto algorithm. In cryptology, ciphertext means encrypted data.

What is Cryptography
"Cryptography" is the whole of the techniques used to transform the transmitted information into a form that cannot be understood by unauthorized people. Cryptography includes mathematical methods that try to provide the basic objectives of information security such as confidentiality, integrity, authentication, and non-repudiation. 
"Cryptography" is the science that converts plaintext to ciphertext with the crypto algorithm. The algorithm in the encryption process is one of the main focuses. The method used by the encryption algorithm is one of the factors that determine the reliability of the algorithm. 

What is Cryptanalysis
"Cryptanalysis" is a branch of cryptology that examines the security of crypto algorithms in order to decrypt the encrypted data and tries to find their weaknesses. “Cryptanalysis” tries to detect mathematical vulnerabilities in the crypto algorithm in order to convert ciphertext to plaintext. 

What is Encryption
The process of converting plaintext into ciphertext is called "Encryption". There is an algorithm used mathematically in the encryption process. 

What is Decryption
The process of converting ciphertext into plaintext is called decryption. As in the encryption process, an algorithm is used in this process. 

What is the Key
The "Key" is a value given as input to encryption and decryption algorithms. Using this value, the encryption and decryption process is applied. 

What is Encoding/Decoding
"Encoding" is often confused with encryption as a concept. In fact, the two terms are used for very different purposes. Encoding is the process of converting data into a specific character set form. Unlike encryption algorithms, it is a conversion algorithm that is used without using key values ​​and without security concerns. There is also the opposite of the encoding process. For example, one of the most frequently used encoding algorithms is the "base64" algorithm. “Decoding” is the opposite of encoding algorithms. The encoded data with the decoding process will turn into previous data. 

- The Correct/Incorrect Uses of Concepts -

MD5/SHA1/SHA256 Encryption (-) Base32/Base64 Encryption/Decryption (-)
MD5/SHA1/SHA256 Decryption (-) Base32/Base64 Encode/Decode (+)
MD5/SHA1/SHA256 Hash Function (+) AES/RSA/ECC Encode/Decode (-)
MD5/SHA1/SHA256 Encode/Decode (-) AES/RSA/ECC Encryption/Decryption (+)


-- Types of Cryptography --

- Types of Cryptography -

• Symmetric Ciphers
• Asymmetric Ciphers
• Protocols

Symmetric Ciphers
Symmetric encryption algorithms are cryptographic algorithms that use the same key in encryption and decryption operations. For example, after you have encrypted the plaintext, you can decrypt the result obtained with the same key again. 

Asymmetric Ciphers
In this type of cryptosystem, which is introduced as "Public-key cryptography" or "asymmetric cryptography", two different keys are used instead of a single key. One of these keys is the "secret key" and the other is the "public key". Different keys are used in encryption and decryption processes for asymmetric crypto algorithms. While “public key” is used for encryption, “secret key” or in other words “private key” is used for decryption. 

Protocols
Cryptographic protocols deal with the implementation of cryptographic algorithms. Symmetric and asymmetric crypto algorithms are used in the security infrastructure of many software. An example of the protocols in which these algorithms are applied is the "Transport Layer Security (TLS)" protocol. In this type of cryptographic protocol, symmetric and asymmetric crypto algorithms are generally used together. This is called “Hybrid Schemes”.


-- Historical Ciphers --

The Substitution Cipher
The substitution cipher is an old and simple crypto algorithm. "Substitution Cipher" is an algorithm that works with the logic of replacing letters in the alphabet with another letter. 

Shift Cipher (or Caesar Cipher)
Caesar Cipher takes its name from the Roman leader "Julius Caesar". Julius Caesar developed a crypto algorithm to secretly transmit messages of military importance at that time, which was quite simple and changed each letter by scrolling over the alphabet. 
Shift Cipher is one of the substitution cipher types. Shift cipher is an algorithm that works by sequentially shifting letters in the alphabet. In this algorithm, the key is the value that indicates how many times the alphabet will be shifted. 
For example with the key "3", when 3 letters are shifted to the left for decryption

Caesar Cipher
https://en.wikipedia.org/wiki/Caesar_cipher

Online Caesar Encryption/Decryption Tool(CyberChef)
https://gchq.github.io/CyberChef/#recipe=ROT13(true,false,false,3)&input=Y2lwaGVy 


-- Objectives of Cryptography --

4 principles, which are among the principles of information security, are also valid for cryptography:

• Confidentiality
• Integrity
• Authentication
• Non-repudiation

Confidentiality
Data/information sent over communication devices should not be understood by unauthorized people. Malicious people should not be able to make sense of the data, even if they obtain information that should remain between the parties. When the attacker listens to the network traffic, encrypted data should appear and this data should be cryptographically undecryptable. If encrypted data is somehow decrypted, the crypto algorithm used will cease to be reliable. Therefore, the developers of the crypto algorithm should design strong crypto algorithms considering this situation. This is the "Confidentiality" principle in information security principles. While designing cryptographic algorithms, it is necessary to design a crypto algorithm in line with this principle. 

Integrity
The attacker can attack the MiTM (Man in the Middle) attack by entering between two communication devices and taking over the traffic in between. In this case, the data reached by the attacker can be changed by the attacker and sent to the target. Apart from preventing this attack, which is possible in theory and in practice, it is necessary to verify that the integrity of the sent data is intact on the other side. In this way, data transmission security is ensured by cryptography. The “Integrity” principle, one of the information security principles, tells us that in such a case we have to verify that the data is not cryptographically compromised. While designing algorithms in cryptography, algorithm design should be done by considering data integrity. 

Non-repudiation
Another principle to consider when creating cryptographic algorithms is the "Non-repudiation" principle. This principle is responsible for ensuring that the sender is not in a position to deny that he has sent the information. Evidence that the sending party is sending the information must be found in the communication algorithm itself. When these principle requirements are not included in the algorithm, it is not revealed that fake people act/do not act on their behalf instead of real people. For example, if there is an insider threat in an institution and the suspect denies that he has done malicious activity, the crypto algorithm should have the technical infrastructure to reveal the truth. Otherwise, it will be difficult to identify the person performing the operation. 

Authentication
The parties that will establish the communication must verify that each other is the right person. It is very difficult to be sure that the party receiving the message is the party the sender wants to communicate with. Therefore, cryptography needs to establish a validation mechanism to prevent the occurrence of fake parties that technically and mathematically replace these two parties. The authentication mechanism is one of the most basic security requirements and its use is very common. For example, when logging in to social media applications or the banking system, whether you are the right person is verified with your username and password information. In addition, more advanced security measures can be taken. For example, “Two-Factor Authentication(2FA)” is one of these security features. With 2FA, one more step of verification is done by using SMS or an authenticator application, and security is increased. It is the "Authentication" principle that provides this for Cryptography. 


-- Random Number Generators --

For a crypto algorithm to be strong in cryptography, it is important that the key is long enough and random. Many random number generator methods have emerged to make the key random. 

There are three types of Random Number Generators:

• True Random Number Generators (TRNG)
• Pseudorandom Number Generators (PRNG)
• Cryptographically Secure Pseudorandom Number Generators (CSPRNG)

True Random Number Generators (TRNG)
True Random Generator is a method that generates random numbers based on real physical operations. An example of this type of random number generation is a coin flip or a dice toss. Although it is an effective method in terms of randomness, it is not a preferred method in terms of applicability and speed. 

Coin Flipping: https://www.random.org/coins/ 

Pseudorandom Number Generators (PRNG)
The Pseudorandom Number Generator method needs an initial random value to ensure randomness. This value is called “seed”. This value can come from the TRNG method. It generates random numbers step by step according to some mathematical calculations over this first value. By applying the same mathematical calculation recursively, a number is generated at each step. Compared to the TRNG method, its application in practice is much easier and faster. But it is not secure and unpredictable enough for use in cryptography. Because if the first value is determined, it is not possible to talk about completely random values, since the value calculated in each step will be the same every time. For example, the "rand()" function in the C programming language can be given as an example of generating a number of types of PRNG. 

Cryptographically Secure Pseudorandom Number Generators (CSPRNG)
Cryptographically Secure Pseudorandom Number Generators (CSPRNG) is an unpredictable variant of PRNG. As in the PRNG method, it is not possible to predict and calculate the next value (0 or 1 bit) to be produced mathematically. The PRNG methods are frequently used in software testing, but CSPRNG is a cryptography-specific method. 

CSPRNG: https://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator 


- Generating Random Value via Linux Command Line  -

Random Number Generation with $RANDOM: sudo echo $RANDOM 

└─$ sudo echo $RANDOM                                                              
[sudo] password for kali: 
28090

In this method, random number generation is between “0-32767” values. 

Random Number Generation with /dev/random: od -An -N2 -i /dev/random | od -An -N3 -i /dev/random 

└─$ od -An -N2 -i /dev/random 
       17174

└─$ od -An -N3 -i /dev/random 
    13358860

└─$ od -An -N4 -i /dev/random 
  1000187406


CSPRNG Linux: https://medium.com/@phil_k/one-liner-csprng-in-your-friendly-linux-console-be02b3bc5a1f 






















