
--- Linux for Blue Team ---

• Introduction to Linux
• Linux File System Hierarchy
• Basic Terminal Commands - 1
• Basic Terminal Commands - 2
• Permissions Management
• User Management and Groups
• Archive File Formats
• Process Management
• Network Management
• Package Management
• Service Management
• Scheduled Tasks


-- Introduction to Linux --

What is Linux
Linux is one of the kernel software, which is the most basic part of computer operating systems. It is a free software project released under the GNU General Public License version 2 and developed under the umbrella of the Linux Foundation. The name Linux was given by its first developer, Linus Torvalds, in 1991.

Benefits of Linux 
Linux is famous for its command line. The power of the command line is an opportunity for cybersecurity professionals working in the cybersecurity industry because the use of Linux's command line can make many things easier and provide flexibility in application practice in cyber security projects and operations. It can save time. SOC analysts usually work on high dimensional data and Linux can easily handle the use of high dimensional data with the command line. 

Common Linux distributions 
• Ubuntu
• CentOS
• Fedora
• Debian
• Red Hat Enterprise Linux
• Linux Mint
• Open SUSE
• Manjaro


-- Linux File System Hierarchy --

Explanation for what purpose each directory in the Linux file system hierarchy is used and what type of files it contains

What is Filesystem Hierarchy
As in every operating system, Linux has a filing system as well. Everything in the Linux operating system consists of files. When all the files come together, they form all the components of the operating system. Files are in a grouped order by directories. In Linux, directories are in a hierarchical order. Hierarchical order means that one directory can be above or below another. In the Linux operating system, the directory structure must conform to a certain standard.

"/" - Root Directory
The directory used as the top directory in the entire file hierarchy in Linux is the "Root Directory". The root directory is expressed with “/” and each directory to be written to the right is under the root directory. For example, the “/bin” directory means the directory named "bin” under the “/” directory. In other words, a parent directory of the "bin" directory is the "/"(root directory). 

/bin Directory
It is the directory where the binary files of the executable commands are located. The executable binary files of the basic commands are located under this directory.

/boot Directory
The files that are needed when the operating system is first turned on, during the loading of the kernel are located under the boot directory.

/dev Directory
The /dev directory contains the device files on the system that are recognized by Linux. Access to the disks on the system is made under this directory. For example “/dev/sda1” refers to a device. This device is a disk or a disk partition.

/etc Directory
The /etc directory is the directory that contains the configuration files on the system. It is one of the most important directories on Linux in terms of security. For example, the encrypted version of the users' passwords is kept under this directory.

/home Directory
The /home directory is the directory where users have various personal files. Downloaded files, documents, and user-specific files can be found under this directory. Since the files under this directory can give an idea about the user, they may be of interest to attackers in terms of security. Therefore, it is one of the directories that the SOC analyst should carefully examine. The size of this directory may vary depending on the user's activity. By default, when a new user is created, a new directory belonging to the user is created in the "/home" directory. However, because it is not mandatory, attackers do not usually create a new directory under the "/home" directory for newly created users.

/lib Directory
Under the /lib directory, there are the library files used by the executable binaries in the system.

/media Directory
The /media directory is the directory where the removable media, such as CD-ROM and USB, are mounted.

/mnt Directory
The /mnt directory is the directory where the temporarily mounted file systems are located.

/opt Directory
The /opt directory is the directory where the application software needed to be installed on the system additionally.

/proc Directory
The /proc directory is the directory that contains the files that hold information about the current status of the running processes on the system.

/root Directory
The most authorized user in Linux is the "Root" user. The root user also has a directory that contains its own files, like other users on the system. This directory is the "/root" directory. This directory can contain critical information just like any other user directory. Therefore, SOC analysts should control access to this directory separately.
The "/root" directory should not be confused with the "/" directory. The “/” directory is the topmost directory on the system. The “/root” directory is a directory under the “/” directory and belongs to the root user.

/run Directory
The /run directory is the directory that holds information about the running system since the last boot of the system.

/sbin Directory
The /sbin directory is the directory where the binaries of executable commands are located. Usually, only the root users can run executable binaries under this directory.

/srv Directory
The /srv directory is the directory that contains the data for the services offered by the system. For example, the data of services such as TFTP or FTP are located under this directory.

/tmp Directory
The /tmp directory is the directory where temporary files are stored. Usually, the files under the "/tmp" directory are deleted during the system reboot. When analyzing a live Linux system, the cyber security specialist who responded to the incident should examine the "/tmp" directory in order to access critical data that may be deleted.

/usr Directory
The /usr directory is the directory containing executable binaries, libraries, and other files that all users of the system can access with read-only privileges.

/var Directory
The /var directory is known as the variable directory and contains system logs, files for tracking user activity, and cache files. It contains the logs that must be checked by the SOC analyst. According to the logs in the "/var" directory, the SOC analyst can see the unauthorized access to the system and take the necessary action. 


-- Basic Terminal Commands --

What is the Command Line
The command line is an intermediary program that receives commands from the user via the keyboard and transfers the commands to the operating system for execution. The command line in Linux is called "shell". There are many types of shells supported on Linux. 

Command Line Structure
When the command line window is opened, we see a structure with a cursor waiting for a command from the user. This structure is as follows: username@hostname:current_directory$
In this structure, the part before the "@" sign represents the username. The part from the "@" sign to the ":" sign represents the hostname. The part from the “:” to the “$” sign indicates which directory it is being worked on. The "$" sign on the far right is the last element in this structure. In the command line of the root user, who is the most authorized user in the system, the "#" sign is used instead of the "$" sign at the end of this structure. 

whatis Command
The whatis command allows us to view a single line of brief information about commands running on the command line. For example, let's execute the whatis command itself together with the whatis command.
For example: whatis whatis
It printed the one-line description of the whatis command to the screen

help Command
The help command is one of the information commands that gives a more detailed output than the whatis command. 
For example help cd

man Command
The man command is the command that provides the most detailed information about the commands and programs on the command line. It has a specific writing format. It offers very detailed content from descriptions to parameters. 
For example: man whatis

pwd Command
The pwd command stands for "print working directory". It is the command that shows the working directory. For example
For example: pwd

cd Command
The cd command is the command to switch between directories. It stands for "change directory". When switching between directories with the cd command, the path of the target directory must be specified. 

a. Absolute Path
Absolute path is a notation written to indicate all subdirectories from the root directory ("/") to the current directory. 

b. Relative Path
Relative path, unlike absolute path, is to write the part after the current directory instead of typing the full path of the directory to be traversed from the root directory(“/”)

Changing directory with current directory (".") sign
The "." sign indicates the current directory. For example: xs ./letsdefend/

d. Changing directory with parent directory ("..") sign
With the ".." (parent directory) sign, we can switch to a parent directory of the current directory. 

e. Switching to the home directory with the home directory ("~") sign
With the "~" (home directory) sign, it is possible to switch to the home directory of the current user. For example: cd ~

f. Switching to the last directory with the Previous directory sign ("-")
With the "-" (previous directory) sign, it is possible to switch to the previous directory, regardless of which directory it is. For example: cd -

ls Command
The ls command is the command to list directories and files. With this command, directories and files under a directory can be viewed. It is one of the most important commands. It can have a very functional use with its parameters. 
For example: ls

a. Viewing hidden files and directories with the ls command
The ls command does not show hidden files when used without parameters. In order to see hidden files, the ls command must be given the "-a" parameter.
The difference between the display of hidden files and normal files is the "." sign in the beginning. As seen in the image above, hidden files were not displayed when the ls command was used without the "-a" parameter. 

b. Getting detailed information about directories and files with the ls command
When the ls command is used with the "-l" parameter, it provides detailed information about the files/directories it lists. This information includes the permissions of the file/directory, the owner of the file/directory the name of the user, the owner of the file/directory the name of the group, the size of the file/directory, the date the file/directory was last modified, and the name of the file/directory. 
For example: ls -a

c. Using multiple parameters with the ls command
It is possible to obtain the desired output by using more than one parameter while executing the ls command. 
For example: ls -al, ls -lah

touch Command
The touch command is the command to create a new empty file via the command line. 
For example: touch testfile.txt

mkdir Command
The mkdir command is the command to create a new directory. It is possible to create multiple directories at once with the mkdir command.
For example: mkdir dir1, mkdir dir2 dir3 dir4

mv Command
The mv command is the command used to rename and move files. With the mv command, we can change the file name as follows
For example: mv oldfile newfile
First, the old file name is written as a parameter after the mv command. As the second parameter, the new file name is written.

In file transfer operations with the mv command, after the mv command, the path where the source file is located is given as the first parameter, and the destination path is given as the second parameter. 
For example: mv movedfile ../incident

cp Command
The cp command is the command used in file/directory copy operations. The first parameter in the cp command is the path of the file/directory to be copied. The second parameter is the target path. 
For example: cp copyfile ../SOC/

It is possible to copy nested directories with the cp command. The "-r" parameter should be used for this operation. 
For example,: cp -r '../soc/directory4/'

rm Command
The rm command is the command used to delete files and directories. When deleting directories with the rm command, the "-r" parameter should be used additionally. 
For example: rm file1, rm -r directory1

cat Command
The cat command is the command used for reading from the file. The path of the file to be read is given as a parameter.

echo Command
The echo command is the command used for printing to the screen. 
When the echo command and redirection operators are used together, printing to the file can be done. These operators are the “>” and “>>” operators. The “>” operator prints the value of the parameter given to the echo command to the file in the parameter that follows 
If the target file content is full, the “>” operator deletes the existing text and prints the specified new expression to the file.
When printing to a file with the “>” operator, if the target file does not exist, it is created and the content is saved in the created file.
If you want to keep the old text by adding to the end of the existing file content, the “>>” operator should be used.

For example: echo BlueTeam, echo "Hello Linux" > note, echo "Hello My Friend" >> note

more Command
The more command is a command that allows reading the contents of long files. The expression “%” in the lower-left indicates which part of the file is read as a percentage. 
There are two conveniences for reading in this interactive environment. These are the "Enter" and "Space" keys on the keyboard. The file can be read by scrolling down line by line with the "Enter" key. A new page comes up with the "Space" button. 
Pressing the "q" key is sufficient to exit the interactive environment that opens with the application of “more” command. 
For example: more wordlist.txt

wc Command
The wc command is a command that counts the number of lines, the number of words and the number of characters in the file content. 
We learn the total number of lines in the file content by using the wc command with the "-l" parameter. 
We learn the total number of words in the file content by using the wc command with the "-w" parameter
We learn the total number of characters in the file content by using the wc command with the "-m" parameter. 
For example: wc -l, wc -w, wc -m

head Command
The head command is the command used to see the lines at the beginning of the file. The “-n” parameter of the head command allows to see any number of lines. 
For example: head wordlist.txt, head -n 5 wordlist.txt

tail Command
The tail command is the command used to see the lines at the end of the file. The "-n" parameter of the tail command allows to see the desired number of lines. 
For example: tail wordlist, tail -n 10 wordlist

grep Command
The grep command is a command to search within a file. The word/words to be searched are given as parameters. 
For example: grep letsdefend wordlist.txt, grep -o "d" grepme.txt | wc -l

sort Command
The sort command is the command to sort the contents of the file alphabetically. 
For example: sort list

uniq Command
The uniq command is used to reduce successive same values ​​to a single value in the file content. 
If all repetitive words, including all non-sequential words in the file content, are wanted to be printed on the screen once, sorting should be done first by applying the sort command, and then the uniq command should be applied. 
It is possible to do all these operations with a single command. "|"(pipe) sign should be used to perform this operation with a single command. 
The pipe(“|”) sign allows you to give the output of one command as input to another command. Pipe(“|”) gives the output of the command on the left as input to the command on the right.
For example: uniq list, sort list | uniq

date Command
The date command is the command that displays the system's date and time

uptime Command
The uptime command is the command that shows how long the system has been up

history Command
The history command is the command that shows the history of commands executed on the command line. 
While the History command is running, it reads the list of commands executed from a file and prints it to the screen. This file is the ".bash_history" file that is hidden under the user's home directory. 

find Command
The find command is the command used in file searches. With the find command, you can find out whether the searched file exists under a certain directory. 
For example: find ../training/ -name attack, find . -type d -name letsdefend

file Command
The file command is the command that shows the file type. In Linux, file extensions are represented. It is the header information of the file that determines the file type. The file command determines the file type according to the header information and prints it to the screen.
For example: file letsdefend.txt


-- Permissions Management --

File permissions
On Linux, each file has permissions. With these permissions, users are authorized to access related files. Management of file permissions is very important for security. The permissions of the files that each user needs to access and the permissions of the user-specific files are different.
The "ls -l" command is used to see the permissions of the files.

File permissions are shown in the leftmost column. File permissions have a unique representation. This display is divided into 4 areas: file type, user permissions, group permissions, and other permissions, respectively. For example: d | rwx | rwx | rwx
On the far left, the file type is expressed first. If it says "d" in this section, it means that it is a directory. If there is a "-" sign, it means that the file exists. The representation of the remaining 3 fields consists of the expressions "r,w,x,-". The meanings of these expressions are as follows:

r : readable
w : writable
x : executable
- : empty

There is also a numerical representation of file permissions. The expression "rwx" consists of 3 bits. In this notation, each r,w,x expression has a numerical equivalent:

4: read permission(r)
2: write permission(w)
1: execute permission(x)

Both letter and numeric notation can be used to change file permissions. 

Changing File Permissions
The "chmod" command is used when changing file permissions. The chmod command basically needs two parameters. The first of these is the parameter that contains information about the permission change. This parameter specifies which permission will be changed and whose permission will be changed. The second parameter is the file that the permissions need to be changed. 
For example: chmod u+x letsdefend.jpg

The first parameter in the command is the "u+x" parameter. In this section, the letter "u" indicates that the privileges of the user will be changed. The "+" sign indicates the change type. The "+" sign is used to authorize, if the "-" sign was used, it would mean revoking the existing authorization. The "x" sign indicates which type of authorization is used.
Instead of "x"(execute), it could be changed to "w"(write) or "r"(read). 

r w - r - - r - - : 6 4 4
r w x r - - r - - : 7 4 4

Ownership Permissions
In Linux, each file has an owner as user and group. Ownership information can be viewed with the "ls -l" command.
The "chown" command is used to change the owner of the file. 

The owner of the file is the "debian" user. 

-rw-r--r-- 1 debian debian 16243 Apr 2 09:02 Letsdefend.jpg 

For example: sudo chown letsdefend letsdefend.jpg

-rw-r--r-- 1 letsdefend debian 16243 Apr 2 09:02 Letsdefend.jpg 

The one on the right represents the owner group. If we want to change the owner group, the command we need to apply is the "chgrp" command. 

For example: sudo chgrp letsdefend letsdefend.jpg

-rw-r--r-- 1 letsdefend debian 16243 Apr 2 09:02 Letsdefend.jpg 


-- User Management and Groups --

Users and Groups
In order to be able to perform any operation on Linux, it is absolutely necessary to have a user. That's why Linux users are very important. The target of the attacker trying to take over the target Linux system is to seize the most authorized user account. The most authorized user on Linux is the "root" user. The root user has no restrictions on the system. The root user should be very careful while running commands on the system because if the root user runs a wrong command, it may have irreversible results that impact the system in a negative way. 
The target for attackers is always to have the privileges of the root user. 

whoami command
The whoami command is the command that shows which user is operating on the command line being worked on. 

The Concept of UID (User ID) ve GID (Group ID)
In Linux, each user and group has its own identification number. The identification number for users is called UID (user id) and GID (group ID) for groups.Id values ​​are used in definitions for operations on the system. 
In Linux-based operating systems, the "root" user has a UID of "0" by default. Users newly added to the operating system usually start from the "1000" UID value and increase with the increments of 1. Generally, service users have a UID value between "1" and "999"
For example: id -u

Finding out the groups the user belongs to
The "id" command can be used to see the groups that the user belongs to. 

/etc/shadow File
"/etc/shadow" file is an important file on the system that keeps the encrypted versions of the passwords of the users. 

Looking at the file permissions, read permission is not granted for other. So the file contents could not be read by the debian user. In such cases, there are some methods to read files that are accessible to the root user.
One of these methods is to apply the sudo command, which allows to act as the root user. The sudo command stands for "superuser do". The sudo command is a command that allows normal users to act as root. The user must be in the sudo group to be able to execute this command. In order to use the sudo command, it is necessary to know the password of the current user because this password information will be requested when the sudo command is executed. 
For example: sudo cat /etc/shadow

The "/etc/shadow" file contains the following information, respectively:

• Username.
• Encrypted password.
• Date of the last password changed - expressed as the number of days since Jan 1, 1970. If there is a 0 that means the user should change their password the next time they log in.
• Minimum password age - Days that a user will have to wait before being able to change their password again.
• Maximum password age - Maximum number of days before a user has to change their password.
• Password warning period - Number of days before a password is going to expire.
• Password inactivity period - Number of days after a password has expired to allow login with their password.
• Account expiration date - the date that the user will not be able to log in.
• Reserved field for future use.

/etc/passwd File
The /etc/passwd file is a file where the entire user list in the system can be seen. It contains detailed information about users. Unlike the shadow file, the “/etc/passwd” file can be read by normal users.

The "/etc/passwd" file contains the following information, respectively:

• Username
• User's password - the password is not really stored in this file, it's usually stored in the /etc/shadow file. You can see many different symbols that are in this field, if you see an "x" that means the password is stored in the /etc/shadow file, a "*" means the user doesn't have login access, and if there is a blank field that means the user doesn't have a password.
• The user ID - as you can see root has the UID of 0
• The group ID
• GECOS field - This is used to generally leave comments about the user or account such as their real name or phone number, it is comma-delimited.
• User's home directory
• User's shell - you'll probably see a lot of users defaulting to bash for their shell

To Create a New User
It is possible to create a new user with the "useradd" command 
For example: sudo useradd tempuser

To Delete an Existing User
It is possible to delete an existing user with the command "userdel"
For example: sudo userdel tempuser

Changing User Password
It is possible to change users' passwords with the "passwd" command. 
For example: sudo passwd letsdefend_user

User Switch in Command Line
It is possible to switch the user on the command line with the "su" command. The name of the user to be actively used is entered as a parameter with the "su" command.
For example: su letsdefend, sudo su -


-- Archive File Formats --

Compressing files with gzip
gzip is one of the tools to save storage space by compressing files. When compressing with the gzip command, “.gz” is added to the file extension.
For example: gzip wordlist.txt

Decompressing gzip files
The "gunzip" command is used to open gzip-compressed files. 
For example: gunzip wordlist.txt

Creating archives with tar
The tar command allows multiple files to be archived as a single file. When the tar command is used alone, it doesn't compress, it just makes a single archive file. 
The extension of files archived with the tar command is specified as ".tar"

The "c" parameter in the command indicates that there is an archive creation operation. 
The "v" (verbose) parameter provides information to the user about whether the operation was successful or not. 
The "f" parameter is used to specify the name of the archive file to be created.

For example: tar cvf tarfile.tar wordlist1.txt wordlist2.txt

Creating zip files
In Linux it is possible to create zip files on the command line. 
For example: zip zipfile.zip wordlist.txt wordlist2.txt

Unzip files
We can open zip files with the "unzip" command on the Linux command line. 
For example: unzip zipfile.zip

Creating rar files
It is possible to archive files as rar in Linux. 
For example: rar a rarfile.rar wordlist1.txt wordlist2.txt

Unrar files
In the Linux command line, we can open rar files with the "unrar" command. 
For example: unrar e rarfile.rar


-- Process Management --

What is Process?
The process is the functioning units of the commands/programs running on the operating system. While performing a live Linux host review, mainly processes are examined. Examination and analysis of memory essentially mean the analysis of processes. In Linux, each process has its own identification number. This identification number is called "Process ID" (PID). This identification number is used in the operations of the processes. 

Listing Running Processes
The "ps" command is used to see the running processes. Information about processes is stored in virtual files under the "/proc" directory. The “ps” command provides output by reading the information in these files. 
The first column contains the user who owns the process. 
The second column contains the PID value, which is the identification number of the process. 
The last column contains the name of the command/program that was run

For example: ps, ps aux, ps -aux, ps --pid 36726 

Listing Running Processes with Realtime Information
With the "top" command, processes can be viewed instantly. 
For example: top

Killing Processes
In some cases, it may be necessary to intervene in processes. 
The "kill" command is used to end the process. 
For example: kill -9 43215


-- Network Management --

What is “Network” and Why is it Important?
The network is the path to the target systems for the attackers. This path is divided into 2 parts: the path inside the organization and the interface facing outside of the organization. The network connections of the devices facing the external interface of the organization and the network connections of the devices within the organization are critical for attack detection and prevention.

To Have Knowledge About the Network Interfaces in the System
On Linux, it is possible to see which network interfaces are active and which IP address they are using from the command line.
The "-a"(all) parameter is used to get detailed information and to see all interfaces
For example: ifconfig, ifconfig -a

Assigning Dynamic IP Addresses to Network Interfaces
The DHCP server is responsible for assigning IP addresses to all devices in the network. The command that enables obtaining an IP address from the DHCP server on Linux is the "dhclient" command.
For example: dhclient ens33

Disabling/Enabling Network Interfaces 
On Linux, it is possible to disable network interfaces from the command line
For example: ifconfig ens33 down, ifconfig ens33 up

Assigning a Static IP Address to the Network Interface 
Assign fixed IP addresses to interfaces in the Linux.
For example: ifconfig ens33 down, ifconfig ens33 192.168.199.250, ifconfig ens33 up

Viewing the Network Connections
View the current network connections and their status via the command line using the "netstat" command.
For example: netstat, netstat -atnp, netstat -ano

The "-a"(all) parameter is the parameter used to show all the connections.
The "-t" parameter is used to show only TCP connections.
The "-n" parameter is used to show addresses numerically without resolving domain names.
The "-p" parameter is used to show the program name and PID number of the connection.

Viewing the Packet Flow Instantly
Monitor incoming and outgoing network packets from the command line.
For example: tcpdump -i ens33

Access Control to the Destination IP Address
We may need to check the network communication of a system using another system within the same network. 
For example: ping -c 1 heise.de

Resolving the DNS Server IP Address of the Domain to be Accessed 
DNS servers as intermediaries perform the domain name and IP address resolution and report back to our system so we can connect to the target systems easily
For example: dig letsdefend.io, nslookup letsdefend.io

/etc/resolv.conf File 
In the Linux operating system, the IP address of the DNS server to which the domain name resolution requests will be sent can be determined. This configuration is done in the "/etc/resolv.conf" file. 
Note: Changes made in the "/etc/resolv.conf" file are deleted after rebooting the system. If permanent changes are desired, changes should be made in the "/etc/systemd/resolved.conf" file
For example: cat /etc/resolv.conf

/etc/hosts File
When trying to access to a domain in Linux, the IP address of the target must be resolved first. In this IP address resolution process, local records are checked first. If the IP address of the target is known and registered on the system, the IP address of the target is obtained before a request is sent to the DNS server. These records are located in the "/etc/hosts" file in Linux. For example
For example: cat /etc/hosts

debian@debian:~/blueteam$ cat /etc/hosts
127.0.0.1  localhost
127.0.1.1  debian

If localhost is desired to be accessed, "127.0.0.1" will be used as the IP address. In this section, new records can be added to the file content in accordance with the format. 
For example, if the google.com domain is to be added to the records along with letsdefend.io IP address, requests made to google.com on the system will go to the letsdefend.io IP address instead of the google.com IP address, because google.com has been recorded as the letsdefend.io IP address. 

File sharing with Python HTTP Server
If file transfer between devices within the same network is needed, file sharing can be opened easily by using "python"
For example: python3 -m http.server


-- Package Management --

Package and Package Management
The package is the downloadable files in the repositories of the distribution to install an application on Linux from the command line or the Graphical User Interface (GUI). The repositories contain installable packages of applications. It is almost the easiest way to install applications on Linux. Each Linux distribution can have a different repository. The desired application can be installed with the package manager installed on Linux, as well as the removal of applications from the system can be done with package managers. To install the application with the package manager, the installable file of the relevant application must be found in the system's repository. Applications that are not included in the repository must be downloaded and installed into the system. 
Linux distributions such as Debian, Ubuntu, and Linux Mint use the same package manager. Linux distributions such as Red Hat Enterprise Linux, Fedora, and CentOS use a different package manager. 
Redhat-like distributions use the "RPM (RPM Package Manager)" package manager. Debian-based distributions use the "APT" package manager. The file extension for the RPM package manager is ".rpm". The file extension for the APT package manager is ".deb". 

APT Source List
When installing packages on Linux, it downloads the file from a specific source. Linux has to know where to download the file. The APT package manager has a source list that it uses to download files. This list, which is saved in a file on Linux, is located in "/etc/apt/sources.list". 
The addresses from which the packages will be downloaded are written in the "/etc/apt/sources.list" file on the system. 

Updating Packages for a Repository
Packages in the repositories are constantly updated. In order to install the newly added packages to the system, the packages in the repository must first be updated. When the command is executed, a list of packages that need to be updated is displayed. 
For example: sudo apt-get update

Installing a package from a repository with APT Package Manager
Packages can be installed on the system with the APT package manager. 
For example: sudo apt-get install chromium

List Installed Packages on the System
The "dpkg" command is used to see the packages installed on the system. 
For example: sudo dpkg -l

Remove a Package with APT Package Manager
It is possible to delete the packages installed on the system with the APT package manager.
For example: sudo apt-get remove chromium

Getting information about an installed package
It is possible to get detailed information about the packages installed in the system in Linux. 
For example: apt show firefox

Installing a Package with dpkg
It is possible to download and install packages on Linux externally. The extension of such files should be ".deb". Files with the ".deb" extension can be uploaded to the system with "dpkg". 
First of all, the relevant package is downloaded from the website. Then, the installation is carried out with the "dpkg" command in the directory where the downloaded file is located.
For example: sudo dpkg -i hwinfo_21.72-1_amd64.de

Removing a package with dpkg
It is possible to remove the packages installed on the system with "dpkg". 
When deleting a package from the system with "dpkg", the name of the package should be written as it is in the "dpkg -l" output
For example: sudo dpkg -r hwinfo


-- Service Management --

What is Service?
Services are programs that run or wait to run in the background in Linux. Many services can be offered as services in Linux.
Services are often important to cybersecurity because services that are turned on have the risk of creating security vulnerabilities.
Therefore, any service that is not needed in the system should be turned off or disabled. Security hardening of the system is vital and should be implemented to ensure the security of our systems. 

Listing All Services Available in the System
It is necessary to know how to manage the services when working with these services on Linux. 
For example: systemctl list-units --type=service

Listing All the Running Services in the System
How to be able to list all the running services in the system.
For example: systemctl list-units --type=service --state=running

Viewing the Status of a Particular Service
We can display the status of a single service.
For example: systemctl status apache2.service

Stopping the Service
The "systemctl" command is used to stop the running service.
For example: systemctl stop apache2.service

Starting the Service
The "systemctl" command is used to start the running service.
For example: systemctl start apache2.service


-- Scheduled Tasks --

What is a Scheduled Task?
A scheduled task is the execution of certain operations on the system at certain times or time intervals. A “Scheduled Task” will implement this type of task in Linux. 
Scheduled tasks are called "cron jobs" in Linux. It is essentially the "cron" service that enables scheduled tasks to run. So if attackers accessed the target Linux system they may task the system to perform certain operations at certain time intervals by taking the advantage of cronjobs. 
The attackers establish persistence by adding the malware and reverse shell commands to the scheduled tasks. 

Listing All Your Cron Jobs
The "crontab -l" command is used to view the available scheduled tasks. 

Structure of Scheduled Tasks (Syntax of crontab)
Scheduled tasks have the following spelling format: 

Example: 30 08 * * * /home/pete/scripts/change_wallpaper

The fields are as follows from left to right: 

• Minute - (0-59)
• Hour - (0-23)
• Day of the month - (1-31)
• Month - (1-12)
• Day of the week - (0-7). 0 and 7 are denoted as Sunday


Adding, Deleting, and Editing New Scheduled Tasks
The "crontab -e" command is used for adding, deleting scheduled tasks, and changing the existing tasks
For example: crontab -e

