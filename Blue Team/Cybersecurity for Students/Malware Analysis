
-- Malware Analysis --

• How Malware Analysis Help SOC Analysts
• Malware Definition
• Malware Types
• What Should a Malware Analyst Know
• Static Analysis
• Dynamic Analysis
• Static Analysis vs Dynamic Analysis
• 29 Addresses to Analyze Malware Faster


-- How Malware Analysis Help SOC Analysts --

As a Security Analyst, you should be able to analyze and figure out whether these files are harmful; and, if it is malicious, you should understand the purpose of this software and how it communicates with the command and control servers. It is an undeniable fact that malware analysis is an indispensable know-how for Security Analysts.


-- Malware Definition --

The word Malware is a word derived from the words MALicious softWARE. It is the name given to software that endangers the security and integrity of systems by targeting a malicious purpose.
Today, cyber threat actors use malicious software to achieve various purposes such as ensuring persistence, damaging systems, demanding ransom. As SOC analyst, we need to analyze suspicious software and understand whether the software is really harmful.
Since there is no restriction, you can come across malicious software written in almost all programming languages. You don't need to know all programming languages ​​to start analyzing malware. However, we can say that being familiar with programming makes it easy to analyze malicious software (it is even mandatory in matters such as reverse engineering).
As a SOC analyst, you will encounter many suspicious files in your daily work routine. These files may have come via email, or may have been detected by the antivirus software on the user device, or they may have been detected by the network security products while being transferred. I believe you got the point :)


-- Malware Types --

A malware may contain more than one feature, so a malware can belong to more than one type. For example, WannaCry malware includes both worm and ransomware malware features.

Backdoor
Leaving a backdoor on the device where the malware is installed, it allows the attacker to access the system through this backdoor.
For example, by opening a network port connected to the shell, it enables the attacker to connect to the system through this port.

Adware
It often comes with downloaded software, causing unwanted advertisements to be displayed on the device. While not all adware is harmful, some change the default search engine.

Ransomware
It is a type of malware that has been on the world agenda for the last few years. It demands ransom from people by encrypting and exfiltrating all files on the device.

Virus
It is one of the first types of malware seen in the wild. So we see that in daily life, it is often called a virus instead of the term malware. Viruses have a self-replicate feature. It provides persistence by infecting other files on the device.

Worm
Since this type of malware spreads from infected devices to other devices, it is named worm. WannaCry, a worm malware exploiting MS17-010 vulnerability, caused panic around the world.

Rootkit
It is a type of malware that disguises itself by providing access to a high level of authority on the device.

RAT (Remote Access Trojan)
It is a type of malware that provides full control over the device to the threat actor.

Banking malware
A type of malware that targets banking applications and causes money to be stolen from the victim.

Keylogger
A type of malware that logs pushed keys and sends this information to attacker.


-- What Should a Malware Analyst Know --

Operating System Fundamentals and Architecture
Since malware runs on operating systems, malware analysts should have a solid understanding and knowledge of the operating systems.
Malware often takes advantage of the features offered by the operating system, increasing its privileges, making discovery and ensuring persistence. To give an example on Windows operating systems, malicious software uses the features of the operating system such as Task Scheduler, Services, Registry to ensure persistence.
In addition to the features of the operating system, API, Syscalls, Memory Architecture and lower level issues are also important for successful malware analysis.

Assembly Language & Programming
When you compile any program in languages ​​such as, C/C++, Python, Java, Ruby, Go etc. compilers translate the codes you write into 0s and 1s that the processor can understand. When you start a program, these 0s and 1s are sent to the processor over the memory to run.
The lowest level programming language you can see is Assembly if we do not consider 0s and 1s. Each instruction has a direct 0 and 1 counterpart. When you compile a program written in C, it is first translated to Assembly language and then to 0s and 1s.
Compiled malware can be easily converted into the Assembly language. However, converting from Assembly language to the next level is not very easy and accurate, so analyses are usually made through Assembly language. Software that translates machine codes into Assembly language is called "Disassembler".

Network Protocols and Fundamentals
Malware often exhibits network activity in order to hijack information, connect to a command and control server, or download second payloads. Understanding these network traffics while analyzing malware is extremely important for us to understand the purpose of the malware.

Cryptography
Many technologies make use of cryptography to provide security. It is also used by attackers for purposes such as complicating, preventing detection and preventing access.
Popular ransomware uses cryptography nowadays to encrypt files and prevent access to files without paying a ransom.


-- Static Analysis --

It is the approach of analyzing malicious software by reverse engineering methods without running them.
Generally, by decompile / disassemble the malware, each step that the malware will execute is analyzed, hence the behavior / capacity of the malware can be analyzed.
Your device will not be infected as you do not run malicious software in static analysis. (However, we do not recommend performing static analysis on your host device, it will be more proper to do your analysis in a virtual operating system.)

The information examined during the static analysis is as follows.

• P.E. (Portable Executable) Headers
• Imported DLL's
• Exported DLL's
• Strings in binary
• CPU Instructions


-- Dynamic Analysis --

It is the approach that examines the behavior of malicious software on the system by running it.
In dynamic analysis, applications that can examine registry, file, network and process events are installed in the system, and their behavior is examined by running malicious software.

While doing dynamic analysis, you should carefully examine the following events.

• Network Connections
• File Events
• Process Events
• Registry Events


-- Static Analysis vs Dynamic Analysis --

Which approach to use when analyzing malware depends on the current circumstances. In cases where you want to get fast results, you can choose dynamic analysis, but we cannot say that the analysis is complete without doing both static and dynamic analysis.
It should also be noted that using only one approach may not be sufficient to analyze malware. Using both approaches together will lead you to victory!
As a result, we cannot say that one approach is better than another. Each has an advantage over each other in different conditions.

Static AnalysisS
• Static analysis takes long time.
• You can learn the capacity of the malware.
• Detailed analysis result

Dynamic Analysis
• Dynamic analysis in general takes a short while.
• As a result of dynamic analysis, you can learn only the activities on the system on which it is run.
• Analysis result is not detailed


-- 29 Addresses to Analyze Malware Faster --

Any.run
https://app.any.run/

Comodo Valkyrie
https://valkyrie.comodo.com/

Cuckoo
https://sandbox.pikker.ee/

Hybrid Analysis
https://www.hybrid-analysis.com/

Intezer Analyze
https://intezer.com/

SecondWrite Malware Deepview
https://www.secondwrite.com/

Jevereg
https://jevereg.amnpardaz.com/

IObit Cloud
https://cloud.iobit.com/

BitBlaze
https://bitblaze.cs.berkeley.edu/

SandDroid
http://sanddroid.xjtu.edu.cn/

Joe Sandbox
https://www.joesandbox.com/#windows

IRIS-H
https://iris-h.services/pages/dashboard#/pages/dashboard

Gatewatcher Intelligence
https://intelligence.gatewatcher.com/

Hatching Triage 
https://tria.ge/

InQuest Labs
https://labs.inquest.net/dfi/search/ext/ext_code##eyJyZXN1bHRzIjpbIn4iLCJmaXJzdFNlZW4iLDEsIiIsW11dfQ==

Manalyzer
https://manalyzer.org/

SandBlast Analysis
https://threatpoint.checkpoint.com/ThreatPortal/emulation

firmware
http://firmware.re/

opswat
https://metadefender.opswat.com/

virustotal
https://www.virustotal.com/gui/home/upload

malware hunter team
https://id-ransomware.malwarehunterteam.com/

virscan 
https://www.virscan.org/

jotti
https://virusscan.jotti.org/it


Malware Bazar
https://bazaar.abuse.ch/sample/708e198608b5b463224c3fb77fcf708b845d0c7b5dbc6e9cab9e185c489be089/



 
