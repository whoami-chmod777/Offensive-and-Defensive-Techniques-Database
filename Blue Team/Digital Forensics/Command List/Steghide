
-- Steghide Tool Usage for Data Hiding --

Steghide works with a cover document (which must be an image or audio file) and a secret document (such as a ZIP file). In this example, we will hide a ZIP archive named secret.zip, containing a text file called 1.txt, inside an image file named laptop.jpg.

1. Preparing the Secret Document: First, compress the directory containing 1.txt by running the command zip -r secret.zip secret, which creates the secret.zip file.

2. Embedding the Secret Document: Use the command steghide embed -cf laptop.jpg -ef secret.zip to embed the ZIP file into the image. This command specifies:

• steghide: the tool being used.
• embed: the mode for embedding files.
• -cf laptop.jpg: the cover file.
• -ef secret.zip: the file to hide.

When prompted, enter a passphrase to secure the embedded data, ensuring that only the intended recipient can access it. The original laptop.jpg is overwritten with the embedded file.

3. Creating a New Stego File: To keep the original image intact, you can create a new file using the -sf flag, such as -sf laptop2.jpg.
4. Extracting Data: To retrieve the hidden file, use steghide extract -sf laptop2.jpg. When prompted for the passphrase, enter it to extract secret.zip, which will be saved in the current directory.


Embed a file:
steghide embed -cf laptop.jpg -ef secret.zip
steghide embed -cf laptop.jpg -ef secret.zip -sf laptop2.jpg
steghide embed -cf laptop.jpg -ef secret.zip -p password

Extract a file:
steghide extract -sf laptop2.jpg -p password
steghide extract -sf file.jpg -p "secret"


-- Cheat Sheet for using Steghide --

steghide	
Launches the Steghide tool.	

sudo apt-get install steghide
Installs Steghide if not already installed.	

steghide embed -cf cover.jpg -ef secret.zip
Embeds a file into a cover document.	

-cf laptop.jpg
Specifies the cover file (image/audio) for embedding.	

-ef secret.zip
Specifies the file to embed within the cover file.	

-sf new_laptop.jpg
Outputs the new stego file to a specified file.	

steghide extract -sf stego.jpg
Extracts embedded files from a stego file.	

-sf laptop2.jpg	
Specifies the stego file from which to extract data.	

-p password
Sets or provides the passphrase for extracting data.	

steghide -h
Displays help information for using Steghide.	

steghide info hawking
steghide info -sf stego.jpg
Get info.



-- How to Hide Secret Data Inside an Image or Audio File in Seconds --

apt-get install steghide

Step 1: Embed Hidden Data into a File

steghide embed -ef secretFile -cf coverFile -sf outputFile -z compressionLevel -e scheme
steghide embed -ef secret.txt -cf StegoCat.jpg -e none -Z

The arguments are broken down as follows:

-ef specifies the path of the file that you want to hide. You can embed any kind of file inside of the cover file, including Python scripts or shell files.
-cf is the file that the data is embedded into. This is restricted to BMP, JPEG, WAV, and AU files.
-sf is an optional argument that specifies the output file. If this is omitted, the original cover file will be overwritten by your new steganographic file.
-z specifies the compression level, between 1 and 9. If you prefer not to compress your file, use the argument -Z instead.
-e specifies the type of encryption. Steghide supports a multitude of encryption schemes, and if this argument is omitted by default, Steghide will use 128-bit AES encryption. If you prefer not use encryption, simply type -e none.


Step 2: Extract Hidden Data from the File

steghide extract -sf stegoFile -xf outputFile
steghide extract -sf StegoCat.jpg -xf extractSecret.txt


Embed & Extract the Hidden Data

sudo steghide embed -ef secretmessage.txt -cf coverfile.jpg -sf hiddenmessage.jpg
sudo steghide extract -sf hiddenmessage.jpg


-- Steghide Flags --

The first argument must be one of the following:

embed, --embed          embed data
extract, --extract      extract data
info, --info            display information about a cover- or stego-file
info <filename>         display information about <filename>
encinfo, --encinfo      display a list of supported encryption algorithms
version, --version      display version information
license, --license      display steghide's license
help, --help            display this usage information

Embedding Options:

-ef, --embedfile          select file to be embedded
  -ef <filename>          embed the file <filename>
-cf, --coverfile          select cover-file
  -cf <filename>          embed into the file <filename>
-p, --passphrase          specify passphrase
  -p <passphrase>         use <passphrase> to embed data
-sf, --stegofile          select stego file
  -sf <filename>          write result to <filename> instead of cover-file
-e, --encryption          select encryption parameters
  -e <a>[<m>]|<m>[<a>]    specify an encryption algorithm and/or mode
  -e none                 do not encrypt data before embedding
-z, --compress            compress data before embedding (default)
  -z <l>                  using level <l> (1 best speed...9 best compression)
-Z, --dontcompress        do not compress data before embedding
-K, --nochecksum          do not embed crc32 checksum of embedded data
-N, --dontembedname       do not embed the name of the original file
-f, --force               overwrite existing files
-q, --quiet               suppress information messages
-v, --verbose             display detailed information

Extracting Options:

-sf, --stegofile        select stego file
  -sf <filename>        extract data from <filename>
-p, --passphrase        specify passphrase
  -p <passphrase>       use <passphrase> to extract data
-xf, --extractfile      select file name for extracted data
  -xf <filename>        write the extracted data to <filename>
-f, --force             overwrite existing files
-q, --quiet             suppress information messages
-v, --verbose           display detailed information

Options for the Info Command:

-p, --passphrase        specify passphrase
  -p <passphrase>       use <passphrase> to get info about embedded data























https://null-byte.wonderhowto.com/how-to/steganography-hide-secret-data-inside-image-audio-file-seconds-0180936/

















