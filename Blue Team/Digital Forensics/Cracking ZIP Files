
By encrypting files with passwords, individuals and organizations can safeguard confidential information from unauthorized access. This security measure ensures that potentially incriminating or sensitive data remains protected, preserving its integrity and chain of custody.

Cracking ZIP Files Topics:

• Compress a Text File into a Password-Protected ZIP File
• Brute-Force Attacks
• Dictionary Attacks


-- Compress a Text File into a Password-Protected ZIP File --

$ sudo apt-get install zip

$ zip --encrypt Protected.zip text.txt.

• zip – Selects the tool we want to use
• –encrypt – Selections the function of the tool we want to use. ‘Encrypt’ will encrypt our ZIP archive and require a password to decrypt the contents.
• Protected.zip – The name of the outputted ZIP file.
• text.txt – The file we want to compress.

$ zip --encrypt Protected.zip text.txt
$ unzip Protected.zip


-- Brute-Force Attacks --

Sometimes investigators will encounter password-protected zipped archives or zipped malware during an investigation with no reference to what the password could be.
ZIP cracking is vital in digital forensics for accessing encrypted evidence, uncovering hidden information, completing data pictures, and building strong legal cases. It allows investigators to retrieve password-protected files, revealing crucial evidence and supporting investigations in court.
However, it must be conducted lawfully and ethically to ensure the integrity of the process and the admissibility of evidence.

- What are the PROS of using a brute-force attack? -

The obvious pro of using this method is that you will ALWAYS get the password. Because you are trying every possible combination, you will eventually crack the password and gain access, but this comes with a major downside.
If you have information such as the length of the password, you will cut down the number of possibilities dramatically. This can be applied to other attacks such as cracking account credentials – if you know the password policy or requirements, you can reduce the number of possibilities significantly.

- What are the CONS of using a brute-force attack? -

This attack method takes time. A lot of time. If you started with AAAAA, the next guess would be AAAAB then AAAAC. It’s going to take a very long time to get the right password, and each additional character is going to add a lot more possibilities.

$ sudo apt-get install fcrackzip

$ fcrackzip -b BruteForceAttack.zip -u -c a1 -l 4

• fcrackzip – Selecting the tool we want to use.
• -b – Selecting the option for a brute-force attack.
• BruteForceAttack.zip – The file we want to brute-force.
• -u – This makes sure fcrackzip actually tries to unzip the file, without this we won’t actually get the right password.
• -c – This is where we pick the characters we want to use in our dictionary attack. In this example we’re using ‘a’ which represents lowercase letters, and ‘1’ which represents numbers 0-9.
• -l – This is where we state the length of the password we want to crack. If we know the password is between 4 and 6 characters, we would use "-l 4-6".


-- Dictionary Attacks --

Dictionary (password list) attacks use wordlists, which are collections of thousands of passwords, each on their own separate line in a text document. These are fed into tools, which will attempt to use each password one after the other, until it receives the correct password, or runs out of entries to try.

- What are the PROS of using a dictionary attack? -

This attack method can be really quick. At the end of the day, you’re trying to find a password that a human has set, and humans are usually predictable. By trying known passwords, you’re more likely to find the password than if you were cracking it using brute force due to the nature of the entries you are trying.

- What are the CONS of using a dictionary attack? -

If the password you’re looking for isn’t in the wordlist you’re using, then you won’t get into the entity you’re trying to gain access to. You could leave your computer running for 3 days trying different wordlists, but if it’s not in there, you will never gain access.


- rockyou.txt wordlist -

$ locate rockyou.txt
$ gunzip rockyou.txt.gz
$ gunzip /usr/share/wordlists/rockyou.txt.gz

$ fcrackzip -D -u -p /usr/share/wordlists/rockyou.txt DictionaryAttack.zip

• fcrackzip – Selecting the tool we want to use.
• -D – Selecting the option for a dictionary attack.
• -u – This makes sure fcrackzip actually tries to unzip the file, without this we won’t actually get the right password.
• -p – Use strings as password.
• /usr/share/wordlists/rockyou.txt – This is the location of our wordlist, required to perform a dictionary attack.
• DictionaryAttack.zip – The file we want to crack.



https://www.security.org/how-secure-is-my-password/








