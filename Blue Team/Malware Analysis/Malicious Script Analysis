
Malicious Script Analysis involves examining code to detect harmful actions or vulnerabilities that could be exploited by attackers.

To catch malicious scripts, important things to look for include:

• Obfuscated Code: Scripts that are intentionally difficult to read or understand, often using techniques like encoding.
• Suspicious Network Activity: Code that initiates unexpected network connections or data exfiltration.
• Unauthorized Access: Attempts to access or modify restricted files, databases, or system settings.
• Anomalous System Behavior: Actions that deviate from normal application behavior, such as creating unexpected processes or modifying system configurations.
• Use of Known Malicious Patterns: Code snippets that match known signatures of malicious activities, such as payload delivery mechanisms or command-and-control structures.
• Privileged Operations: Execution of commands that require elevated privileges without clear justification.
• Injection Attacks: Code that introduces SQL, command, or script injections aimed at exploiting vulnerabilities in other applications or systems.
• Data Manipulation: Unusual operations on sensitive data, such as unauthorized encryption, deletion, or exfiltration of user information.
• External Dependencies: Inclusion of external libraries or dependencies from untrusted sources that may contain malicious code.
• Behavioral Anomalies: Deviations from expected usage patterns, such as unusual file modifications, frequent errors, or abnormal CPU and memory usage.


Specific Tools and Commands Observed in the Script:

• jstillery: JavaScript obfuscation/deobfuscation.
• shcode2exe: Shellcode to executable conversion.
• tracesc -b 32 -f filename: Shellcode tracing and analysis.
• wine: Running Windows applications on Unix-like systems.
• extrascripts.py: Custom Python scripting for various tasks.


These tools and observations provide a robust framework for identifying and analyzing malicious scripts.

• jstillery script_110044517844562543.js 
• shcode2exe -o sample.exe -a 64 script_110044517844562543.js 
• tracesc -b 32 -f [running wine]

• oledump 1.doc
• unzip 1.doc -d ./

• file script_110044517844562543.js
• gedit script_110044517844562543.js
• jstillery script_110044517844562543.js 

• extract_url.py
• extract_charts.py
• append_strings
