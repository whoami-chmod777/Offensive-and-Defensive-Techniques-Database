
Static analysis is the examination of software code or binaries without executing them to identify potential vulnerabilities or malicious behavior.


-- Tools for Static Malware Analysis --

• Exiftool: Utility for reading, writing, and editing metadata in various file formats.
• File: Command-line tool to determine the type of a file.
• Strings: Finds and displays printable strings in binary files, useful for identifying human-readable text within executables.
• FLOSS: Automatically detects, extracts, and decodes obfuscated strings in malware binaries.
• Capa: Identifies capabilities in executable files, making it useful for malware analysis.
• Manalyze: Performs static analysis of PE files, detecting various characteristics and potential malicious indicators.
• Pestudio: Highlights potential indicators of malicious intent in PE files.
• Pe-tree: Visualizes and analyzes Portable Executable (PE) files, aiding in understanding their structure and properties.

Example Commands for Static Analysis:

$ exiftool d9f280c1e9c66325c5d26ec4cb2e31e2f77d4a8e4fe806844c78806ec9eaf070.zip  
$ exiftool -hex d9f280c1e9c66325c5d26ec4cb2e31e2f77d4a8e4fe806844c78806ec9eaf070.exe

$ file d9f280c1e9c66325c5d26ec4cb2e31e2f77d4a8e4fe806844c78806ec9eaf070.exe 

$ strings d9f280c1e9c66325c5d26ec4cb2e31e2f77d4a8e4fe806844c78806ec9eaf070.exe
$ strings d9f280c1e9c66325c5d26ec4cb2e31e2f77d4a8e4fe806844c78806ec9eaf070.exe | more
$ strings -n 10 d9f280c1e9c66325c5d26ec4cb2e31e2f77d4a8e4fe806844c78806ec9eaf070.exe

$ floss d9f280c1e9c66325c5d26ec4cb2e31e2f77d4a8e4fe806844c78806ec9eaf070.exe 
$ capa d9f280c1e9c66325c5d26ec4cb2e31e2f77d4a8e4fe806844c78806ec9eaf070.exe
$ manalyze d9f280c1e9c66325c5d26ec4cb2e31e2f77d4a8e4fe806844c78806ec9eaf070.exe --plugins all

These tools and techniques provide a comprehensive approach to identifying malware.


-- Entropy in Malware Analysis --

Entropy is a measure of randomness or disorder within a dataset. In malware analysis, entropy assesses the randomness of data within a file, particularly in its various sections (like '.text', '.data', '.rsrc', etc.), helping to identify unusual or suspicious characteristics.

Importance of Entropy in Malware Analysis

• Detection of Packed or Compressed Data: High entropy suggests data is highly compressed, encrypted, or packed, often used to obfuscate malware.
• Identification of Obfuscated Code: High entropy can indicate the use of obfuscation techniques to hide malware functionality.
• Distinguishing Malicious from Benign Files: Comparing entropy values of suspect files with known good files to identify anomalies.
• Indicators of Encryption and Compression: High entropy indicates encryption, often used to protect payloads or C2 communications.
• Automated Analysis and Classification: Entropy calculations help automated tools and machine learning models flag suspicious files for deeper analysis.


Example Use in Tools:

• PeStudio: Analyzes the entropy of each section within a PE file.
• Binwalk: Detects compressed or encrypted data within firmware images.
• IDA Pro with Plugins: Visualizes and analyzes entropy across different sections of a binary.


Entropy is crucial in detecting packing, compression, and encryption within files. High entropy values typically indicate obfuscation, making entropy analysis essential for prioritizing suspicious files and sections for deeper investigation.
