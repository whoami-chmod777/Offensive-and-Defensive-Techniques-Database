
-- CVEs and CVSS --

CVEs and CVSS scores are two things you’ll hear a lot about when dealing with vulnerabilities. They help us to share information regarding security issues, and rate them using a scale from Low to Critical using numerical values based on a large number of factors. This lesson will quickly cover what they are, and why they’re really important to us.


-- Common Vulnerabilities and Exposures --

CVE, which stands for Common Vulnerabilities and Exposures, is a way to standardize names for publicly-known vulnerabilities. I like to think of CVEs working like domain names. Everyone knows www.Google.com, but most people don’t know the website IP. We use www.Google.com because it’s convenient, easy to remember, and easy to use. The same goes for CVEs. I know that CVE-2019-0708 is assigned to the Remote Desktop Protocol (RDP) zero-day remote code execution vulnerability named ‘BlueKeep’. It makes life easier when talking about vulnerabilities, or sharing information between different vulnerability databases, tools, and services. The term CVE, which is copyrighted by MITRE (to ensure it remains free and usable by the security community), is stated that “CVE Entries are comprised of an identification number, a description, and at least one public reference.”

https://CVEDetails.com is a security vulnerability database that has lots of information and can allow us to search for specific CVEs, or even look at vulnerabilities sorted by release date.

https://nvd.nist.gov is the National Vulnerability Database, created by the National Institute of Standards and Technology. NIST states “The NVD is the U.S. government repository of standards-based vulnerability management data”. This is a website I used every day at work, because it provides valuable information about vulnerabilities. 

Usage scenario:
I’m at work defending against cyber attacks, stopping hackers, and being an all-around hero (slight exaggeration) – when all of a sudden I see reports of a new vulnerability for Adobe Acrobat and Reader being report on Twitter, by using TweetDeck as a monitoring platform. I know the majority of the endpoints in my organization are running 2019.012.20035. Looks like we’re affected. Next I want to gather information on the vulnerability to see how serious it is, and if we need to do anything immediately or not.
I’ll visit https://nvd.nist.gov/vuln/search and click on Advanced and then enter the CVE into the CVE Identifier field and click Search. In this case, I’ll look at the first one, CVE-2019-8039.
Once I search for the CVE, I’m able to see any search results. The NVD already has the CVE profile populated, and I can see a short summary. In the first line it reads “Adobe Acrobat and Reader” – so I know that we have the right CVE. I can click on this result to view the full details.
Here I am provided with more information, such as the versions affected, the type of vulnerability (use after free) and what successful exploitation will result in (remote code execution). I can also see a link directly to the Adobe security advisory, which will provide even more information.


-- Common Vulnerability Scoring System --

Carrying on from the CVE example above, under the “Severity” heading there is a section that states

Vector:  CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H.
This is the Common Vulnerability Scoring System, used to help rank vulnerabilities based on their attributes. Whilst this may look like some confusing code, it’s actually fairly simple. Base Score: 8.8 HIGH tells us that this vulnerability has a high severity. The idea behind these scores is that it provides value at a glance, so you can look at the score and immediately tell if this vulnerability is bad. Obviously this is a general score, and what may be a critical vulnerability for one company but not affect another company at all – it all depends on the products and versions you’re using, the security controls you have in place, and a number of other factors, so this score value should only be taken as a generic guideline. 

● CVSS:3.0 = This score is generated using CVSS 3.0 (as opposed to version 2.0)
● AV:N = Attack Vector: Network (Exploitation can occur over a network, such as the Internet)
● AC:L = Attack Complexity: Low (This attack is easy to conduct, and requires little technical sophistication)
● PR:N = Privileges Required: None (The attacker does not need an account with any specific permissions for successful exploitation)
● UI:R = User Interaction: Required (Exploitation does rely on a legitimate user doing something, such as clicking something or opening a malicious file)
● S:U = Scope: Unchanged (The scope for this vulnerability has not been changed)
● C:H = Confidentiality Impact: High (Confidentiality is broken, meaning the attack will gain access to files or information that should be restricted)
● I:H = Integrity Impact: High (Integrity is broken, meaning the attack is able to modify files or information)
● A:H = Availability Impact: High (Availability is broken, meaning the attack can restrict legitimate access to a system)


-- Finishing the Scenario --

The fact this vulnerability affects a version of Adobe Acrobat and Reader my organization is running, it has a CVSS3 score of 8.8 HIGH, the attack vector is Network (over the Internet), and the result is remote code execution (potentially full system control), this is something I would definitely raise with my team, and potentially send out an alert immediately to our IT department, who would likely raise a Change Request, which is a formal request to have the software updated to the latest stable and secure version. Factors like Threat Intelligence can aid CVSS scores when deciding how quickly actions need to be taken.

● We have a Medium-rated vulnerability that has public exploit code (also referred to as proof-of-concept code, which basically means anyone with this can potentially conduct a successful attack), and this vulnerability is actively being exploited in the wild (internet) by multiple advanced threat actors.
● We have a CRITICAL-rated vulnerability that does not have public exploit code and is not being exploited in the wild.

Which one would you address first? In this case, we would likely look at the Medium-rated vulnerability with urgency. Despite having a lower CVSS score, if there is public exploit code, and it is observed being used in the wild, we definitely need to make sure we fix the vulnerability if it’s present within any of our networks.




https://www.cvedetails.com/
https://nvd.nist.gov/
