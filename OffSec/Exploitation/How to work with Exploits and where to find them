
-- How to work with Exploits and find them --

• Downloading exploits



Use the Exploit-db and Searchsploit to verify that there are exploits are for the vulnerabilities that we had previously discovered. Now we will look at what you need to do to download, modify and execute those exploits. In particular there are a couple of steps required to ensure an exploit is executed safely and to prevent it from doing anything unexpected.
Many of the exploits available on Exploit-db are written in Python, Perl, Ruby or Bash and can be downloaded directly to the attack box. Once the scripts have been downloaded, we need to analyse the exploit code carefully to confirm that it exactly does what it advertises. Failure to take proper precautions could open backdoors on the attack machine, wipe an entire hard drive on the target machine or even add the machine to a botnet.
Once we’re sure that we’re dealing with an authentic exploit we will often need to make some modifications to adapt the exploit to our target. Many exploits are written as proofs of concept (POCs) which means that the exploit only proves that the attack can be done without causing harm (i.e. a harmless payload is used). By way of example, a proof-of-concept exploit that exploits a remote code execution vulnerability might be designed to just execute the ifconfig command and to display the output on a webpage thereby ‘proving the concept’ that remote code execution is possible without causing harm. However, such a result is pretty useless if you actually want to gain a shell on the host and therefore, we need to modify the payload. Modifying such an exploit for practical use will require replacing the ifconfig command with a reverse or bind shell command. Other modifications can include simply adding a target host, port or other variables, replacing the bind/reverse shellcode or modifying offsets in buffer overflow exploits.
Another reason to carefully examine the exploit code is that it often contains usage instructions in comment blocks, or they may be obvious from the code itself. To work properly most scripts, require a few (static) variables in the code or values that are passed as arguments (a value passed to a function or script, such as the IP address or a port) to be inserted. Usually, they will be specific to the target such as an IP address, a port and sometimes credentials to access an administration panel for example. By analysing the code of the exploit, we can find out which arguments are needed and how they are processed in the script. Many exploits are programmed to print out usage instructions to the terminal when invalid arguments are passed (or no arguments at all), but remember that we’re not executing anything at this moment and we want to retrieve information from static analysis. We are merely investigating how to use the script before its execution.

Note: Also use your common sense when analysing exploit code. If you’re dealing with a remote exploit that doesn’t take a target host as argument you’re probably dealing with a fake and potentially dangerous exploit.

So far we’ve talked about exploits written in scripting languages, such as Python and Perl. These scripting languages are interpreted scripting languages where the code is executed by an interpreter. An interpreter is a program that directly executes instructions written in a scripting language. For example, Python code needs to be executed by a Python interpreter and to execute Perl code you would need to use a Perl interpreter. There are also exploits written in programming languages that need to be compiled before they can be executed. Compilation is the process of translating one programming language into another where the output is an executable program. Privilege escalation exploits for Linux and Windows are often written in such languages.


-- Downloading exploits --

Before we can start to modify an exploit we first need to download it to the attack machine. The easiest methods for obtaining exploits is by:

• Downloading them from Exploit-db via a browser;
• Using a command line tool like wget; or,
• Copying the exploit code from Searchsploit

On the Exploit-DB website simply press the download button to download the selected exploit to your machine.

You can also use wget to download the exploit from the command line: wget https://www.exploit-db.com/download/35513 -O 35513.py
You can also copy the exploit from the local Searchsploit database to a different location, such as the desktop: searchsploit 35513
We can also add the -p option to show the full path of the exploit script: searchsploit 35513 -p
























