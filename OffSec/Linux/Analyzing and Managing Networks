

--- ANALYZING AND MANAGING NETWORKS - CHEAT SHEET (ASCII)


CORE IDEAS
------------------------------------------------------------
• You’ll often hack over a network: know how to view, change, and spoof network settings (IP, MAC, DNS), and query DNS for recon.
• Use Linux tools: ifconfig, iwconfig, dhclient, dig, and edit /etc/resolv.conf and /etc/hosts when needed.

ANALYZING NETWORKS WITH ifconfig
------------------------------------------------------------
Show active interfaces and details (IP, broadcast, mask, MAC): kali >ifconfig

Example (from text):
eth0  Link encap:Ethernet  HWaddr 00:0c:29:ba:82:0f
      inet addr:192.168.181.131  Bcast:192.168.181.255  Mask:255.255.255.0
lo    Link encap:Local Loopback
      inet addr:127.0.0.1  Mask:255.0.0.0
wlan0 Link encap:Ethernet  HWaddr 00:c0:ca:3f:ee:02

KEY FIELDS
• Interface names: eth0 (wired), lo (loopback 127.0.0.1), wlan0 (wireless)
• HWaddr = MAC address
• inet addr = IP address
• Bcast = broadcast address
• Mask = netmask


CHECKING WIRELESS WITH iwconfig
------------------------------------------------------------
List wireless capabilities, mode, association, power: kali >iwconfig

Example (from text):
wlan0  IEEE 802.11bg  ESSID:off/any
       Mode:Managed  Access Point: Not Associated  Tx-Power=20 dBm
lo     no wireless extensions
eth0   no wireless extensions


CHANGING YOUR NETWORK INFORMATION
------------------------------------------------------------
Change IP address on eth0: kali >ifconfig eth0 192.168.181.115

Change IP + netmask + broadcast: kali >ifconfig eth0 192.168.181.115 netmask 255.255.0.0 broadcast 192.168.1.255


SPOOFING YOUR MAC ADDRESS (HWaddr)
------------------------------------------------------------
Bring interface down, set MAC, bring it up:
kali >ifconfig eth0 down
kali >ifconfig eth0 hw ether 00:11:22:33:44:55
kali >ifconfig eth0 up


GET A NEW DHCP ADDRESS (WITHOUT REBOOT)
------------------------------------------------------------
Request a lease from DHCP for eth0: kali >dhclient eth0
Then verify: kali >ifconfig


DNS RECON WITH dig
------------------------------------------------------------
Get nameservers (NS) for domain: kali >dig hackers-arise.com ns

Example ANSWER/ADDITIONAL (from text):
hackers-arise.com. 5 IN NS ns7.wixdns.net.
hackers-arise.com. 5 IN NS ns6.wixdns.net.
ns6.wixdns.net. 5 IN A 216.239.32.100

Get mail exchangers (MX) for domain: kali >dig hackers-arise.com mx

Example AUTHORITY (from text): hackers-arise.com. 5 IN SOA ns6.wixdns.net. support.wix.com 2016052216 10800 3600 604800 3600


CHANGING YOUR DNS SERVER (/etc/resolv.conf)
------------------------------------------------------------
Open in editor: kali >leafpad /etc/resolv.conf

Add Google Public DNS: nameserver 8.8.8.8

Or via command line (replace file contents): kali >echo "nameserver 8.8.8.8"> /etc/resolv.conf

NOTE: With DHCP, the server may overwrite resolv.conf when the lease renews.

LOCAL NAME MAPPING WITH /etc/hosts
------------------------------------------------------------
Open hosts file: kali >leafpad /etc/hosts

Default + custom mapping example (from text):
127.0.0.1       localhost
127.0.1.1       kali
192.168.181.131 bankofamerica.com
# The following lines are desirable for IPv6 capable hosts
::1     localhost ip6-localhost ip6-loopback
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters

(Press TAB between IP and hostname.)


LISTING AVAILABLE DEVICES
------------------------------------------------------------
When the ifconfig command is called without parameters, it lists the available network devices (NIC, Network Interface Controller).

root@hackerbox:~$ ifconfig

eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 172.20.1.109  netmask 255.255.255.0  broadcast 172.20.1.255
        inet6 fe80::5054:ff:fe10:72c3  prefixlen 64  scopeid 0x20<link>
        ether 52:54:00:10:72:c3  txqueuelen 1000  (Ethernet)
        RX packets 4542  bytes 352144 (343.8 KiB)
        RX errors 2  dropped 0  overruns 0  frame 2
        TX packets 1475  bytes 6213607 (5.9 MiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
        device interrupt 11  memory 0xfc840000-fc860000  

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 16  bytes 1888 (1.8 KiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 16  bytes 1888 (1.8 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

In the output above, there are 2 network interfaces:
• eth0: Ethernet interface, UP and active. IP 172.20.1.109, MAC 52:54:00:10:72:c3
• lo: Loopback interface for 127.0.0.1 (local host)

To view a specific interface: root@hackerbox:~$ ifconfig eth0
To view inactive interfaces too: root@hackerbox:~$ ifconfig -a


ACTIVATING AND DEACTIVATING INTERFACES
------------------------------------------------------------
Bring an interface up: root@hackerbox:~$ ifconfig eth0 up
Bring an interface down: root@hackerbox:~$ ifconfig eth0 down

(Note: Doing this on your main network interface will interrupt your internet connection.)


ASSIGNING AN IP ADDRESS
------------------------------------------------------------
Assign or update an IP address: root@hackerbox:~$ ifconfig eth0 172.20.1.110

Set the netmask: root@hackerbox:~$ ifconfig eth0 netmask 255.255.255.0


PROMISCUOUS MODE
------------------------------------------------------------
Enable promiscuous mode (to capture all packets): root@hackerbox:~$ ifconfig eth0 promisc
Disable promiscuous mode: root@hackerbox:~$ ifconfig eth0 -promisc


CHANGING THE MAC ADDRESS
------------------------------------------------------------
Change the MAC address of eth0: root@hackerbox:~$ ifconfig eth0 hw ether AA:BB:CC:DD:EE:FF


DNS SETTINGS
------------------------------------------------------------
In Linux, DNS settings are stored in /etc/resolv.conf.
Edit with a text editor: root@hackerbox:~$ nano /etc/resolv.conf

Example: nameserver 172.20.1.1

To use Cloudflare’s DNS:
nameserver 1.1.1.1
nameserver 1.0.0.1


SSH (SECURE SHELL)
------------------------------------------------------------
SSH allows secure remote connections over a network.

Install SSH service (Debian-based):
sudo apt-get update
sudo apt-get install openssh-server

Start and enable SSH service:
sudo systemctl start ssh
sudo systemctl enable ssh

Connect to a remote server:
ssh user@ip_address
Example:
ssh root@192.168.1.100

Generate SSH key pair:
ssh-keygen
Copy public key to remote host:
ssh-copy-id user@ip_address
Example:
ssh-copy-id root@192.168.1.100

SSH configuration file:
sudo nano /etc/ssh/sshd_config
Change port or disable root login:
Port 2222
Restart SSH service after editing:
sudo systemctl restart ssh


SUMMARY
------------------------------------------------------------
• Inspect: ifconfig, iwconfig
• Change: ifconfig (IP/mask/bcast/MAC)
• Lease: dhclient <iface>
• DNS recon: dig <domain> ns | mx
• DNS servers: /etc/resolv.conf
• Local overrides: /etc/hosts

EXERCISES (from text)
------------------------------------------------------------
1) Find information on your active network interfaces.
2) Change the IP address on eth0 to 192.168.1.1.
3) Change your hardware address on eth0.
4) Check whether you have any available wireless interfaces active.
5) Reset your IP address to a DHCP-assigned address.
6) Find the nameserver and email server of your favorite website.
7) Add Google’s DNS server to your /etc/resolv.conf file so your system refers to that server when it can’t resolve a domain name query with your local DNS server.

